:py:mod:`multidyndnscli.nc_dnsapi`
==================================

.. py:module:: multidyndnscli.nc_dnsapi

.. autoapi-nested-parse::

   Netcup DNS API v0.1.6

   Because version 0.1.6 has never been released on pypi, 
   this file has been copied from the original Netcup DNS API project found here:
   https://github.com/nbuchwitz/nc_dnsapi

   Original License: GPL v3

   Original Authors/Contributors (Github user):
   Nicolai Buchwitz (nbuchwitz)
   Thomas G. (coldfix)
   ? (tuxmaster5000)
   ? (jp-coding)



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   multidyndnscli.nc_dnsapi.DNSZone
   multidyndnscli.nc_dnsapi.DNSRecord
   multidyndnscli.nc_dnsapi.Client




Attributes
~~~~~~~~~~

.. autoapisummary::

   multidyndnscli.nc_dnsapi.name


.. py:data:: name
   :value: 'nc_dns'

   

.. py:class:: DNSZone(name, ttl, serial, refresh, retry, expire, dnssecstatus)

   Bases: :py:obj:`object`

   .. py:method:: __str__()

      Return str(self).


   .. py:method:: __eq__(other)

      Return self==value.



.. py:class:: DNSRecord(hostname, type, destination, **kwargs)

   Bases: :py:obj:`object`

   .. py:attribute:: __valid_types
      :value: ['A', 'AAAA', 'MX', 'CNAME', 'CAA', 'SRV', 'TXT', 'TLSA', 'NS', 'DS', 'OPENPGPKEY', 'SMIMEA', 'SSHFP']

      

   .. py:attribute:: __repr__

      

   .. py:method:: __str__()

      Return str(self).


   .. py:method:: __eq__(other)

      Return self==value.



.. py:class:: Client(customer, api_key, api_password, timeout=5)

   Bases: :py:obj:`object`

   .. py:attribute:: __endpoint
      :value: 'https://ccp.netcup.net/run/webservice/servers/endpoint.php?JSON'

      

   .. py:attribute:: __api_session_id

      

   .. py:method:: request(action, **kwargs)


   .. py:method:: logout()


   .. py:method:: login()


   .. py:method:: add_dns_record(domain, record)


   .. py:method:: update_dns_record(domain, record)


   .. py:method:: update_dns_records(domain, records)


   .. py:method:: dns_record_exists(domain, record)


   .. py:method:: dns_record(domain, record)


   .. py:method:: delete_dns_record(domain, record, ignore_unknown=True)


   .. py:method:: delete_dns_records(domain, records)


   .. py:method:: dns_records(domain)


   .. py:method:: update_dns_zone(domain, zone)


   .. py:method:: dns_zone(domain)


   .. py:method:: __enter__()


   .. py:method:: __exit__(exc_type, exc_value, traceback)



